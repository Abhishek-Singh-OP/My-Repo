import cv2
import pytesseract
from PIL import Image
from IPython.display import display

# Ensure pytesseract can be found
pytesseract.pytesseract.tesseract_cmd = r'/usr/local/bin/tesseract'  # Update this path based on your Tesseract installation

# Function to extract text from an image using pytesseract
def extract_text_from_image(image_path):
    # Read the image using OpenCV
    image = cv2.imread(image_path)
    if image is None:
        print(f"Error reading image: {image_path}")
        return None, None
    
    # Convert the image to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    # Use pytesseract to extract text
    text = pytesseract.image_to_string(gray_image)
    return text, gray_image

# Define the image path
image_path = 'path/to/your/cropped_label_image.png'  # Update this path to the specific image

# Check if the image name contains "label" or "open_text"
if 'label' in image_path or 'open_text' in image_path:
    extracted_text, gray_image = extract_text_from_image(image_path)
    if extracted_text is not None:
        print(f'Text from {image_path}:')
        print(extracted_text)
        
        # Convert the grayscale image to a format suitable for display in Jupyter
        pil_image = Image.fromarray(gray_image)
        display(pil_image)
        print('-' * 40)
else:
    print('The specified image does not contain "label" or "open_text" in its filename.')

print('Text extraction completed.')
