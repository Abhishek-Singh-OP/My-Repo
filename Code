import cv2
import os
from ultralytics import YOLO

def crop_and_save_labels(image_path, detections, output_dir):
    image = cv2.imread(image_path)
    os.makedirs(output_dir, exist_ok=True)
    
    for idx, detection in enumerate(detections):
        x_min, y_min, x_max, y_max = map(int, detection.box.xyxy[0])
        label = detection.label
        cropped_image = image[y_min:y_max, x_min:x_max]
        output_path = os.path.join(output_dir, f"label_{label}_{idx}.png")
        cv2.imwrite(output_path, cropped_image)

# Load YOLOv8 model
model = YOLO('path_to_your_trained_model.pt')

# Path to the image you want to process
image_path = 'path_to_your_image.jpg'
output_dir = 'path_to_save_cropped_labels'

# Perform detection
results = model(image_path)

# Crop and save detected labels
crop_and_save_labels(image_path, results[0].boxes, output_dir)
